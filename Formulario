/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.pruebanb.mavenproject1;

import java.awt.event.ActionEvent;

/**
 *
 * @author gustavomoreno
 */
public class Formulario extends javax.swing.JFrame {

    /**
     * Creates new form Formulario
     */
    public Formulario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Filter");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                filtrado(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Del");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Title");
        jLabel3.setToolTipText("");

        jTextField2.setText("New Note");
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Nota 1", "Nota 2", "Nota 3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 208, Short.MAX_VALUE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton3)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jTextField3))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addComponent(jButton3))
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
               caja =new JTextField();
        contenedor.add(caja);
        caja.setBounds(10, 10, 400, 30);
        
        areaTexto =new JTextArea();
        contenedor.add(areaTexto);
        areaTexto.setBounds(10, 50, 400, 200);
        
        KeyListener l=new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                //areaTexto.append("keyTyped\n");
            }
            @Override
            public void keyPressed(KeyEvent e) {
                //areaTexto.append("keyPressed\n");
            }
            @Override
            public void keyReleased(KeyEvent e) {
                //areaTexto.append("keyReleased\n");
                if(e.getKeyChar()=='*'){
                    areaTexto.append("Presionaste el asterico\n");
                }
                if(e.getKeyChar()=='\n'){
                    areaTexto.append("Presionaste enter\n");
                }
                if(e.getKeyChar()==' '){
                    areaTexto.append("Presionaste espacio\n");
                }
            }
        };
        caja.addKeyListener(l);
 
    }                         

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {                                     
        // TODO add your handling code here:
               caja =new JTextField();
        contenedor.add(caja);
        caja.setBounds(10, 10, 400, 30);
        
        areaTexto =new JTextArea();
        contenedor.add(areaTexto);
        areaTexto.setBounds(10, 50, 400, 200);
        
        KeyListener l=new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                //areaTexto.append("keyTyped\n");
            }
            @Override
            public void keyPressed(KeyEvent e) {
                //areaTexto.append("keyPressed\n");
            }
            @Override
            public void keyReleased(KeyEvent e) {
                //areaTexto.append("keyReleased\n");
                if(e.getKeyChar()=='*'){
                    areaTexto.append("Presionaste el asterico\n");
                }
                if(e.getKeyChar()=='\n'){
                    areaTexto.append("Presionaste enter\n");
                }
                if(e.getKeyChar()==' '){
                    areaTexto.append("Presionaste espacio\n");
                }
            }
        };
        caja.addKeyListener(l);
   
    }                                    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here
               caja =new JTextField();
        contenedor.add(caja);
        caja.setBounds(10, 10, 400, 30);
        
        areaTexto =new JTextArea();
        contenedor.add(areaTexto);
        areaTexto.setBounds(10, 50, 400, 200);
        
        KeyListener l=new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                //areaTexto.append("keyTyped\n");
            }
            @Override
            public void keyPressed(KeyEvent e) {
                //areaTexto.append("keyPressed\n");
            }
            @Override
            public void keyReleased(KeyEvent e) {
                //areaTexto.append("keyReleased\n");
                if(e.getKeyChar()=='*'){
                    areaTexto.append("Presionaste el asterico\n");
                }
                if(e.getKeyChar()=='\n'){
                    areaTexto.append("Presionaste enter\n");
                }
                if(e.getKeyChar()==' '){
                    areaTexto.append("Presionaste espacio\n");
                }
            }
        };
        caja.addKeyListener(l);
    }                                           

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
               caja =new JTextField();
        contenedor.add(caja);
        caja.setBounds(10, 10, 400, 30);
        
        areaTexto =new JTextArea();
        contenedor.add(areaTexto);
        areaTexto.setBounds(10, 50, 400, 200);
        
        KeyListener l=new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                //areaTexto.append("keyTyped\n");
            }
            @Override
            public void keyPressed(KeyEvent e) {
                //areaTexto.append("keyPressed\n");
            }
            @Override
            public void keyReleased(KeyEvent e) {
                //areaTexto.append("keyReleased\n");
                if(e.getKeyChar()=='*'){
                    areaTexto.append("Presionaste el asterico\n");
                }
                if(e.getKeyChar()=='\n'){
                    areaTexto.append("Presionaste enter\n");
                }
                if(e.getKeyChar()==' '){
                    areaTexto.append("Presionaste espacio\n");
                }
            }
        };
        caja.addKeyListener(l);

    
    }                                        

    private void filtrado(java.awt.event.KeyEvent evt) {                          
        // TODO add your handling code here:
               caja =new JTextField();
        contenedor.add(caja);
        caja.setBounds(10, 10, 400, 30);
        
        areaTexto =new JTextArea();
        contenedor.add(areaTexto);
        areaTexto.setBounds(10, 50, 400, 200);
        
        KeyListener l=new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                //areaTexto.append("keyTyped\n");
            }
            @Override
            public void keyPressed(KeyEvent e) {
                //areaTexto.append("keyPressed\n");
            }
            @Override
            public void keyReleased(KeyEvent e) {
                //areaTexto.append("keyReleased\n");
                if(e.getKeyChar()=='*'){
                    areaTexto.append("Presionaste el asterico\n");
                }
                if(e.getKeyChar()=='\n'){
                    areaTexto.append("Presionaste enter\n");
                }
                if(e.getKeyChar()==' '){
                    areaTexto.append("Presionaste espacio\n");
                }
            }
        };
        caja.addKeyListener(l);

    }                         

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {                                     
        // TODO add your handling code here:
        
               caja =new JTextField();
        contenedor.add(caja);
        caja.setBounds(10, 10, 400, 30);
        
        areaTexto =new JTextArea();
        contenedor.add(areaTexto);
        areaTexto.setBounds(10, 50, 400, 200);
        
        KeyListener l=new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                //areaTexto.append("keyTyped\n");
            }
            @Override
            public void keyPressed(KeyEvent e) {
                //areaTexto.append("keyPressed\n");
            }
            @Override
            public void keyReleased(KeyEvent e) {
                //areaTexto.append("keyReleased\n");
                if(e.getKeyChar()=='*'){
                    areaTexto.append("Presionaste el asterico\n");
                }
                if(e.getKeyChar()=='\n'){
                    areaTexto.append("Presionaste enter\n");
                }
                if(e.getKeyChar()==' '){
                    areaTexto.append("Presionaste espacio\n");
                }
            }
        };
        caja.addKeyListener(l);
    }                                    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
               caja =new JTextField();
        contenedor.add(caja);
        caja.setBounds(10, 10, 400, 30);
        
        areaTexto =new JTextArea();
        contenedor.add(areaTexto);
        areaTexto.setBounds(10, 50, 400, 200);
        
        KeyListener l=new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                //areaTexto.append("keyTyped\n");
            }
            @Override
            public void keyPressed(KeyEvent e) {
                //areaTexto.append("keyPressed\n");
            }
            @Override
            public void keyReleased(KeyEvent e) {
                //areaTexto.append("keyReleased\n");
                if(e.getKeyChar()=='*'){
                    areaTexto.append("Presionaste el asterico\n");
                }
                if(e.getKeyChar()=='\n'){
                    areaTexto.append("Presionaste enter\n");
                }
                if(e.getKeyChar()==' '){
                    areaTexto.append("Presionaste espacio\n");
                }
            }
        };
        caja.addKeyListener(l);

    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        boton =new JButton("Humano pon tu miserable nombre para saludarte");
        contenedor.add(boton);
        boton.setBounds(10, 10, 400, 30);

        caja =new JTextField();
        contenedor.add(caja);
        caja.setBounds(10, 50, 400, 30);

        etiqueta =new JLabel();
        contenedor.add(etiqueta);
        etiqueta.setBounds(10, 100, 400, 30);

        ActionListener accion=new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Hola");
                etiqueta.setText("Hola "+caja.getText());
            }
        };

        boton.addActionListener(accion);
        }
    }                                        

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {                                     
        // TODO add your handling code here:
       caja =new JTextField();
        contenedor.add(caja);
        caja.setBounds(10, 10, 400, 30);
        
        areaTexto =new JTextArea();
        contenedor.add(areaTexto);
        areaTexto.setBounds(10, 50, 400, 200);
        
        KeyListener l=new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                //areaTexto.append("keyTyped\n");
            }
            @Override
            public void keyPressed(KeyEvent e) {
                //areaTexto.append("keyPressed\n");
            }
            @Override
            public void keyReleased(KeyEvent e) {
                //areaTexto.append("keyReleased\n");
                if(e.getKeyChar()=='*'){
                    areaTexto.append("Presionaste el asterico\n");
                }
                if(e.getKeyChar()=='\n'){
                    areaTexto.append("Presionaste enter\n");
                }
                if(e.getKeyChar()==' '){
                    areaTexto.append("Presionaste espacio\n");
                }
            }
        };
        caja.addKeyListener(l);
    }                                    

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
       caja =new JTextField();
        contenedor.add(caja);
        caja.setBounds(10, 10, 400, 30);
        
        areaTexto =new JTextArea();
        contenedor.add(areaTexto);
        areaTexto.setBounds(10, 50, 400, 200);
        
        KeyListener l=new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                //areaTexto.append("keyTyped\n");
            }
            @Override
            public void keyPressed(KeyEvent e) {
                //areaTexto.append("keyPressed\n");
            }
            @Override
            public void keyReleased(KeyEvent e) {
                //areaTexto.append("keyReleased\n");
                if(e.getKeyChar()=='*'){
                    areaTexto.append("Presionaste el asterico\n");
                }
                if(e.getKeyChar()=='\n'){
                    areaTexto.append("Presionaste enter\n");
                }
                if(e.getKeyChar()==' '){
                    areaTexto.append("Presionaste espacio\n");
                }
            }
        };
        caja.addKeyListener(l);
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration                   
}
